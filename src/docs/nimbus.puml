@startuml
skinparam classAttributeIconSize 0

class Main {
    - CommandProcessor commandProcessor
    - exitCommand: String
    - inputHandler: InputHandler
    - outputHandler: OutputHandler
    + start(): void
}

class CommandProcessor {
    - CommandFactory commandFactory
    + process(input: String): String
}

interface Command {
    + execute(): String
}

interface ArgumentCommand {
    + withArguments(arguments: String): Command
}

class EchoCommand {
    - message: String
    + withArguments(arguments: String): Command
    + execute(): String
}

class ExitCommand {
    + withArguments(arguments: String): Command
    + execute(): String
}

class ExternalCommand {
    - buildCommand(): List<String>
    + withArguments(arguments: String): Command
    + execute(): String
}

class TypeCommand {
    + TypeCommand(commandRegistry: Map<String, Command>)
    + withArguments(arguments: String): Command
    + execute(): String
}

class CdCommand {
    + CdCommand()
    + withArguments(arguments: String): Command
    + execute(): String
    - resolvePath(): Path
}

class PwdCommand {
    + PwdCommand()
    + withArguments(arguments: String): Command
    + execute(): String
}

class CommandFactory {
    - Map<String, Command> commandRegistry
    + createCommand(input: String): Command
}

interface InputHandler {
    + readInput(): String
}

class ConsoleInputHandler {
    + readInput(): String
}

InputHandler <|-- ConsoleInputHandler

interface OutputHandler {
    + printOutput(output: String): void
}

class ConsoleOutputHandler {
    + printOutput(output: String): void
}

OutputHandler <|-- ConsoleOutputHandler

class CommandUtils {
    <<static>> + findCommandInPath(): String
    <<static>> + getExecutableExtensions(): List<String>
}
class ShellContext {
    - static ShellContext instance
    - ShellContext()
    + static ShellContext getInstance()
    + void setCurrentDirectory(String data)
    + String getCurrentDirectory()
}

ShellContext : getInstance() returns the singleTon instance

TypeCommand ..> CommandUtils : Uses
ExternalCommand ..> CommandUtils : Uses

CdCommand ..> ShellContext : Uses
PwdCommand ..> ShellContext : Uses

Main --> CommandProcessor
CommandProcessor --> CommandFactory
CommandFactory --> Command
Main --> InputHandler
Main --> OutputHandler


Command <|-- ArgumentCommand
Command <|-- EchoCommand
Command <|-- ExitCommand
Command <|-- ExternalCommand
Command <|-- TypeCommand
Command <|-- CdCommand
Command <|-- PwdCommand
@enduml
